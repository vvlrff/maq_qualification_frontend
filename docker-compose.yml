version: "3.9"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    environment:
      - "discovery.type=single-node"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - my-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - my-network

  filebeat:
    build:
      context: ./filebeat
    volumes:
      - ./frontend/nginx/logs:/var/log/nginx
    networks:
      - my-network
    depends_on:
      - logstash

  logstash:
    build:
      context: ./logstash
      dockerfile: Dockerfile
    environment:
      XPACK_MONITORING_ENABLED: "false"
    expose:
      - 5044
    ports:
      - 5044:5044
    volumes:
      - ./logstash/pipelines/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
      - ./logstash/pipelines:/usr/share/logstash/config/pipelines:ro
      - ./logstash/GeoLite2-City.mmdb:/usr/share/logstash/GeoLite2-City.mmdb:ro
    depends_on:
      - elasticsearch
    networks:
      - my-network

  # prometheus:
  #   build:
  #     context: monitoring/prometheus/
  #   volumes:
  #     - ./monitoring/prometheus/config/:/etc/prometheus/
  #     - prometheus:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/usr/share/prometheus/console_libraries'
  #     - '--web.console.templates=/usr/share/prometheus/consoles'
  #   # depends_on:
  #   #   - cadvisor
  #   ports:
  #     - "9090:9090"
  #   logging:
  #     driver: json-file
  #     options:
  #       max-size: "4m"
  #       max-file: "10"
  #   environment:
  #     - VIRTUAL_HOST=prometheus.example.com
  #     - VIRTUAL_PORT=9090
  #     - LETSENCRYPT_HOST=prometheus.example.com
  #     - LETSENCRYPT_EMAIL=you@youremail.com
  #   networks:
  #     - my-network

  alertmanager:
    image: prom/alertmanager:v0.26.0
    volumes:
      - ./prometheus/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    # restart: unless-stopped
    expose:
      - 9093
    ports:
      - "127.0.0.1:9093:9093"
    networks:
      - my-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    # restart: unless-stopped
    expose:
      - 8080
    ports:
      - "127.0.0.1:8080:8080"
    networks:
      - my-network

  prometheus:
    image: prom/prometheus:v2.48.0
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    # restart: unless-stopped
    expose:
      - 9090
    ports:
      - "127.0.0.1:9090:9090"
    networks:
      - my-network

  node-exporter:
    image: prom/node-exporter:v1.7.0
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    ports:
      - "127.0.0.1:9100:9100"
    networks:
      - my-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./prometheus/grafana_provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=Hobrus
      - GF_SECURITY_ADMIN_PASSWORD=Lq16MNh5
    # restart: unless-stopped
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    networks:
      - my-network

  # alertmanager:
  #   build:
  #     context: monitoring/alertmanager/
  #   volumes:
  #     - ./monitoring/alertmanager/config/:/etc/alertmanager/
  #   command:
  #     - '--config.file=/etc/alertmanager/config.yml'
  #     - '--storage.path=/alertmanager'
  #   logging:
  #     driver: json-file
  #     options:
  #       max-size: "4m"
  #       max-file: "10"
  #   ports:
  #     - "9093:9093"   
  #   environment:
  #     - VIRTUAL_HOST=alertmanager.example.com
  #     - VIRTUAL_PORT=9093
  #     - LETSENCRYPT_HOST=alertmanager.example.com
  #     - LETSENCRYPT_EMAIL=you@youremail.com
  #   networks:
  #     - my-network

  # node-exporter:
  #   build:
  #     context: monitoring/node-exporter/
  #   volumes:
  #     - "/proc:/host/proc:ro"
  #     - "/sys:/host/sys:ro"
  #     - "/:/rootfs:ro"
  #   command:
  #     - '--path.procfs=/host/proc'
  #     - '--path.sysfs=/host/sys'
  #     - --collector.filesystem.ignored-mount-points
  #     - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
  #   logging:
  #     driver: json-file
  #     options:
  #       max-size: "4m"
  #       max-file: "10"
  #   networks:
  #     - my-network

  # grafana:
  #   build:
  #     context: monitoring/grafana/
  #   user: "104"
  #   depends_on:
  #     - prometheus
  #   volumes:
  #     - grafana:/var/lib/grafana
  #     - ./monitoring/grafana/config/provisioning/:/etc/grafana/provisioning/
  #   env_file:
  #     - ./monitoring/grafana/config/config.monitoring
  #   logging:
  #     driver: json-file
  #     options:
  #       max-size: "4m"
  #       max-file: "10"
  #   environment:
  #     - VIRTUAL_HOST=grafana.example.com
  #     - VIRTUAL_PORT=3000
  #     - LETSENCRYPT_HOST=grafana.example.com
  #     - LETSENCRYPT_EMAIL=you@youremail.com
  #   networks:
  #     - my-network  
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/nginx/logs:/var/log/nginx
      - /etc/letsencrypt/:/etc/letsencrypt/
    networks:
      - my-network

volumes:
  elasticsearch-data:
  grafana_data:
  prometheus_data:

networks:
  my-network:
    driver: bridge




  # prometheus:
  #   image: prom/prometheus
  #   volumes:
  #     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - my-network

  # grafana:
  #   image: grafana/grafana
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #     - ./grafana/provisioning:/etc/grafana/provisioning
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=youradminpassword
  #   ports:
  #     - "3001:3000"
  #   depends_on:
  #     - prometheus
  #   networks:
  #     - my-network