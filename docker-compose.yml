version: "3.9"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    environment:
      - "discovery.type=single-node"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - my-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - my-network

  filebeat:
    build:
      context: ./filebeat
    volumes:
      - ./logs:/logs
      - ./frontend/nginx/logs:/var/log/nginx
    networks:
      - my-network
    depends_on:
      - logstash

  logstash:
    build:
      context: ./logstash
      dockerfile: Dockerfile
    environment:
      XPACK_MONITORING_ENABLED: "false"
    expose:
      - 5044
    ports:
      - 5044:5044
    volumes:
      - ./logstash/pipelines/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
      - ./logstash/pipelines:/usr/share/logstash/config/pipelines:ro
    depends_on:
      - elasticsearch
    networks:
      - my-network

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - my-network

  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=youradminpassword
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    networks:
      - my-network
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/nginx/logs:/var/log/nginx
      - /etc/letsencrypt/:/etc/letsencrypt/
    networks:
      - my-network

volumes:
  elasticsearch-data:
  grafana_data:

networks:
  my-network:
    driver: bridge
