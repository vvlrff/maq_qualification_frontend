input {
  beats {
    port => 5044
  }
}

filter {
  if [source] =~ "/var/log/nginx/" {
    grok {
      match => { "message" => "%{IPORHOST:remote_ip} - %{DATA:user_name} \[%{HTTPDATE:time}\] \"%{WORD:http_method} %{DATA:url} HTTP/%{NUMBER:http_version}\" %{NUMBER:http_status} %{NUMBER:bytes_sent} \"%{DATA:referrer}\" \"%{DATA:user_agent}\"" }
    }
    ruby {
      code => '
        require "maxminddb"
        
        db = MaxMindDB.new("/usr/share/logstash/GeoLite2-City.mmdb")
        ip = event.get("remote_ip")
        
        begin
          result = db.lookup(ip)
          
          if result.found?
            event.set("geoip", {
              "coordinates" => [result.location.longitude, result.location.latitude],
              "city_name" => result.city.names["en"],
              "country_name" => result.country.names["en"]
            })
          end
        rescue => e
          event.set("geoip_lookup_failure", "#{e.message}")
        end
      '
    }
    mutate {
      replace => { "message" => "%{remote_ip}" }
    }
  }
}

output {
  elasticsearch {
    hosts => "http://elasticsearch:9200"
    index => "map_front_app"
  }
}